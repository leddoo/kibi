ENV.fib := fn(n)
    let a = 0
    let b = 1
    let i = 0
    while i < n:
        let c = a + b
        a = b
        b = c
        i += 1
    end
    a
end

(fn():
    let a = 8; let b = 9; let c = 10
    if true:
        a += b
        while b > c:
            b -= c / a
        end
    else:
        a = c / a
        b = false
    end

    let d = if true: a end
    d = d + a
    d = d + b
    d = d + c
    d = d + d

    print("d is ")
    println(d)
end)()

(fn():
    println("doing the loop thing")
    let values = [1, 5, 4]
    let d = 7
    var i = 0
    while i < d*d:
        values[i] := 0
        i += 1
    end
end)()


(fn():
    println("doing the other list thing")
    let list = [1, 5, 4, "hi", ENV]

    list[5] := list[1] + list[2]
end)()

(fn():
    ENV.foo := "the real foo"
    foo = "or is it?"
    foo = 7
    ENV.three := 3
    foo += ENV["three"]
end)()


ENV.greet := fn (name)
    print("hey, ")
    print(name)
    println("!")
end

println(greet)
greet("weirdo")

ENV.unused_param := fn(a, b, c)
    print("a: ")
    print(a)
    print(", c: ")
    print(c)
    println("")
end

unused_param(4, 8, 16)

(fn():
    let a = 1
    let b = 2
    let c = 3
    let n = 0
    while a < 3:
        let d = a
        a = b
        b = c
        c = d
        n += 1
    end
    print(a)
    print(b)
    print(c)
    print(" ")
    println(n)
end)()

let i = 0
while i < 15:
    print("fib(")
    print(i)
    print(") = ")
    println(fib(i))
    i += 1
end


fn()
    let a
    let b
    while false:
        let c = a
        a = b
        b = c
    end
end



--[[
fn new_board(w, h)
    let values = [1, 5, 4]
    var i = 0
    while i < w*h:
        values[i] := 0
        i += 1
    end
    return { w, h, values }
end
--]]

